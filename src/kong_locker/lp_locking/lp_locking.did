type Result = variant { Ok : principal; Err : text };
type Result_1 = variant { Ok : nat; Err : text };
service : {
  // Create and immediately blackhole a lock canister
  create_lock_canister : () -> (Result);
  // Get all lock canisters
  get_all_lock_canisters : () -> (vec record { principal; principal }) query;
  // Get user's lock canister
  get_my_lock_canister : () -> (opt principal) query;
  // Get voting power by querying KongSwap
  get_voting_power : (principal) -> (Result_1);
}
